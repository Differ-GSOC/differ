<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:security="http://www.springframework.org/schema/security"
       xsi:schemaLocation="
	http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
	http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
	http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd">

    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>WEB-INF/differ.properties</value>
            </list>
        </property>
    </bean>

    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="${db.driverClassName}"/>
        <property name="url" value="${db.url}"/>
        <property name="username" value="${db.username}"/>
        <property name="password" value="${db.password}"/>
    </bean>

    <bean id="imageDAO" class="cz.nkp.differ.dao.ImageDAOImpl">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <bean id="userDAO" class="cz.nkp.differ.dao.UserDAOImpl">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <bean id="imageManager" class="cz.nkp.differ.io.ImageManager">
        <property name="imageDAO" ref="imageDAO"/>
        <property name="uploadDirectory" value="${differ.home}/images/"/>
    </bean>

    <bean id="profileManager" class="cz.nkp.differ.io.ProfileManager">
        <property name="profileDirectory" value="${differ.home}/profiles/"/>
    </bean>

    <bean id="userManager" class="cz.nkp.differ.user.UserManager">
        <property name="userDAO" ref="userDAO"/>
    </bean>
    
    <bean id="resultManager" class="cz.nkp.differ.io.ResultManager">
        <property name="marshaller" ref="jaxb2Marshaller"/>
        <property name="directory" value="${differ.home}/results/"/>
    </bean>

    <bean id="genericImageLoader" class="cz.nkp.differ.images.GenericImageLoader"/>

    <bean id="djvuImageLoader" class="cz.nkp.differ.images.DjvuImageLoader"/>

    <bean id="imageLoaderFactory" class="cz.nkp.differ.images.ImageLoaderFactory">
        <property name="loaders">
            <map>
                <entry key="djvu" value-ref="djvuImageLoader"/>
            </map>
        </property>
        <property name="defaultImageLoader" ref="genericImageLoader"/>
    </bean>

    <bean id="imageProcessorConfig" class="cz.nkp.differ.compare.io.ImageProcessorConfig">
        <property name="imageWidth" value="480"/>
    </bean>

    <bean id="imageProcessor" class="cz.nkp.differ.compare.io.pure.PureImageProcessor">
        <constructor-arg ref="imageLoaderFactory"/>
        <constructor-arg ref="metadataExtractors"/>
        <property name="config" ref="imageProcessorConfig"/>
    </bean>

    <!-- kduexpand -->
    <bean id="kduexpandMetadataTransformer" class="cz.nkp.differ.compare.metadata.external.RegexpTransformer">
        <property name="mapOfRegexp">
            <map>
                <entry key="width" value="Image size      : ([0-9]+) x [0-9]+"/>
                <entry key="height" value="Image size      : [0-9]+ x ([0-9]+)"/>
            </map>
        </property>
        <property name="listOfRegexp">
            <list>
                <value>([[\w|_]]+)=([^=]+)</value>
            </list>
        </property>
    </bean>

    <bean id="kduexpandMetadataExtractor" class="cz.nkp.differ.compare.metadata.external.KduExpandMetadataExtractor">
        <property name="source" value="kduexpand"/>
        <property name="transformer" ref="kduexpandMetadataTransformer"/>
        <property name="profileManager" ref="profileManager"/>
        <property name="programArguments">
            <list>
                <value>${kdu_expand.binary}</value>
                <value>-i</value>
                <value>{file}</value>
                <value>-record</value>
                <value>/dev/stdout</value>
                <value>-no_decode</value>
            </list>
        </property>
    </bean>

    <!-- Jhove -->
    <bean id="jhoveMetadataTransformer" class="cz.nkp.differ.compare.metadata.external.XSLTTransformer">
        <property name="stylesheet" value="${jhove.xsl}"/>
    </bean>

    <bean id="jhoveMetadataExtractor" class="cz.nkp.differ.compare.metadata.external.ExternalMetadataExtractor">
        <property name="source" value="jhove"/>
        <property name="transformer" ref="jhoveMetadataTransformer"/>
        <property name="programArguments">
            <list>
                <value>${jhove.binary}</value>
                <value>{file}</value>
            </list>
        </property>
    </bean>

	<!--  units -->
	<util:map id="units">
		<entry key="Image width" value="px" />
		<entry key="Image height" value="px" />
		<entry key="Code block height" value="px" />
		<entry key="Code block width" value="px" />
		<entry key="Resolution horizontal" value="PPI" />
		<entry key="Resolution vertical" value="PPI" />
		<entry key="Display resolution horizontal" value="PPI" />
		<entry key="Display resolution vertical" value="PPI" />
		<entry key="Tile size X" value="PPI" />
		<entry key="Tile size Y" value="PPI" />
	</util:map>
    
    <!-- common -->
    <import resource="tools/metadataFinishing.xml"/>
    
    <!-- exiftool -->
    <import resource="tools/exiftoolMetadataExtractor.xml"/>
    
    <!-- exiv2 -->
    <import resource="tools/exiv2MetadataExtractor.xml"/>
    
    <!-- imageMagick -->
    <import resource="tools/imagemagickMetadataExtractor.xml"/>

    <bean id="metadataExtractors" class="cz.nkp.differ.compare.metadata.MetadataExtractors">
        <property name="extractors">
            <list>
                <ref bean="kduexpandMetadataExtractor"/>
                <ref bean="jhoveMetadataExtractor"/>
                <ref bean="exiftoolMetadataExtractor"/>
                <ref bean="exiv2MetadataExtractor"/>
                <ref bean="imagemagickMetadataExtractor"/>
            </list>
        </property>
    </bean>

    <!-- Rest API -->
    <context:component-scan base-package="cz.nkp.differ"/>

    <bean id="jaxb2Marshaller" class="org.springframework.oxm.jaxb.Jaxb2Marshaller">
        <property name="classesToBeBound">
            <list>
                <value>cz.nkp.differ.compare.io.SerializableImageProcessorResult</value>
                <value>cz.nkp.differ.compare.io.SerializableImageProcessorResults</value>
            </list>
        </property>
        <property name="marshallerProperties">
            <map>
                <entry>
                    <key>
                        <util:constant static-field="javax.xml.bind.Marshaller.JAXB_FORMATTED_OUTPUT" />
                    </key>
                    <value type="boolean">true</value>
                </entry>
            </map>
        </property>
    </bean>

    <bean id="marshallingConverter" class="org.springframework.http.converter.xml.MarshallingHttpMessageConverter">
        <constructor-arg ref="jaxb2Marshaller" />
        <property name="supportedMediaTypes">
            <list>
                <util:constant static-field="org.springframework.http.MediaType.TEXT_XML"/>
            </list>
        </property>
    </bean>

    <security:http use-expressions="true">
        <security:intercept-url pattern="/rest/**" access="permitAll"/>
        <security:http-basic/>
    </security:http>

    <security:authentication-manager >
        <security:authentication-provider ref="authenticationManager"/>
    </security:authentication-manager>

    <bean id="authenticationManager" class="cz.nkp.differ.rest.auth.DBAuthenticationManager">
    </bean>

</beans>

