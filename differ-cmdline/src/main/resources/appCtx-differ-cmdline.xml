<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:util="http://www.springframework.org/schema/util"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xsi:schemaLocation="
    http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
    http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd">

    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
	<property name="locations">
	    <list>
		<value>classpath:/common.properties</value>
		<value>${application.properties}</value>
	    </list>
	</property>
    </bean>

    <bean id="genericImageLoader" class="cz.nkp.differ.images.GenericImageLoader"/>

    <bean id="djvuImageLoader" class="cz.nkp.differ.images.DjvuImageLoader"/>

    <bean id="tiffImageLoader" class="cz.nkp.differ.images.ExternalImageLoader">
      <property name="programArguments">
	<list>
	  <value>/usr/bin/convert</value>
	  <value>{input_file}</value>
	  <value>{output_file}</value>
	</list>
      </property>
      <property name="imageLoader" ref="genericImageLoader"/>
      <property name="prefix" value="bmp"/>
    </bean>
    
    <bean id="imageLoaderFactory" class="cz.nkp.differ.images.ImageLoaderFactory">
      <property name="loaders">
	<map>
	  <entry key="djvu" value-ref="djvuImageLoader"/>
	  <entry key="tiff" value-ref="tiffImageLoader"/>
	  <entry key="tif" value-ref="tiffImageLoader"/>
	</map>
      </property>
      <property name="defaultImageLoader" ref="genericImageLoader"/>
    </bean>
    
    <!-- <bean id="imageLoaderFactory" class="cz.nkp.differ.images.ImageLoaderFactory"> -->
    <!-- 	<property name="loaders"> -->
    <!-- 	    <map> -->
    <!-- 		<entry key="djvu" value-ref="djvuImageLoader"/> -->
    <!-- 	    </map> -->
    <!-- 	</property> -->
    <!-- 	<property name="defaultImageLoader" ref="genericImageLoader"/> -->
    <!-- </bean> -->

    <bean id="imageProcessorConfig" class="cz.nkp.differ.compare.io.ImageProcessorConfig">
	<property name="imageWidth" value="128"/>
    </bean>

    <!-- <import resource="imageProcessor.xml"/> -->
    <import resource="pureImageProcessor.xml"/>
    <import resource="metadataFinishing.xml"/>
    <import resource="metadataSignificantProperties.xml"/>

    <util:map id="units">
      <entry key="Image width" value="px"/>
      <entry key="Image height" value="px"/>
      <entry key="Code block height" value="px"/>
      <entry key="Code block width" value="px"/>
      <entry key="Resolution horizontal" value="PPI"/>
      <entry key="Resolution vertical" value="PPI"/>
      <entry key="Display resolution horizontal" value="PPI"/>
      <entry key="Display resolution vertical" value="PPI"/>
      <entry key="Tile size X" value="PPI"/>
      <entry key="Tile size Y" value="PPI"/>
    </util:map>
    
    <!-- <import resource="../dist/WEB-INF/applicationContext.xml"/> -->

    <!-- web to collect results of comparison -->
    <bean id="reportHTTPSender" class="cz.nkp.differ.cmdline.ReportHTTPSender">
      <property name="url" value="${reportingWeb.url}"/>
      <property name="password" value="${reportingWeb.password}"/>
      <property name="user" value="${reportingWeb.user}"/>
    </bean>

    <!-- exiftool -->
    <bean id="exiftoolMetadataTransformer" class="cz.nkp.differ.compare.metadata.external.RegexpTransformer">
      <property name="mapOfRegexp">
    	<map>
    	  <entry key="File size"        value="File Size[\ \t]*:[\ \t]*(.+)"/>
    	  <entry key="Type of format"        value="File Type[\ \t]*:[\ \t]*(.+)"/>
    	  <entry key="MIME type"        value="MIME Type[\ \t]*:[\ \t]*(.+)"/>
    	  <entry key="Software type"    value="Software[\ \t]*:[\ \t]*(.+)"/>
    	  <entry key="File last modified"    value="File Modification Date/Time[\ \t]*:[\ \t]*(.+)"/>
    	  <entry key="Image width"      value="^[\ \t]*Image Width[\ \t]*:[\ \t]*([0-9]+)"/>
    	  <entry key="Image height"     value="^[\ \t]*Image Height[\ \t]*:[\ \t]*([0-9]+)"/>
    	  <entry key="Resolution horizontal"     value="X Resolution[\ \t]*:[\ \t]*(.*)"/>
    	  <entry key="Resolution vertical"     value="Y Resolution[\ \t]*:[\ \t]*(.*)"/>
    	  <entry key="Resolution unit"  value="Resolution Unit[\ \t]*:[\ \t]*(.*)"/>
    	  <entry key="Univerzal unique identifier (UUID)"   value="Image Unique ID[\ \t]*:[\ \t]*(.*)"/>
    	  <entry key="Compression" value="Compression[\ \t]*:[\ \t]*(.*)"/>
    	  <entry key="Encoding process" value="Encoding Process[\ \t]*:[\ \t]*(.*)"/>
    	  <entry key="Color depth"   value="Bits Per Sample[\ \t]*:[\ \t]*([0-9]*)"/>
    	  <entry key="Number of channels"   value="Color Components[\ \t]*:[\ \t]*([0-9]*)"/>
    	  <entry key="Color space"   value="Color Space[\ \t]*:[\ \t]*(.*)"/>
    	</map>
      </property>
      <property name="listOfRegexp">
    	<list>
	  <value>([^:]+):([^:]+)</value>
    	</list>
      </property>
    </bean>
    
    <bean id="exiftoolMetadataExtractor" class="cz.nkp.differ.compare.metadata.external.ExternalMetadataExtractor">
      <property name="source" value="exiftool"/>
      <property name="transformer" ref="exiftoolMetadataTransformer"/>
      <property name="programArguments">
    	<list>
    	  <value>${exiftool.binary}</value>
    	  <value>{file}</value>
    	</list>
      </property>
      <property name="units" ref="units"/>
      <property name="supportedFileExtensions">
	<list>
	  <value>tiff</value>
	  <value>tif</value>
	  <value>jpeg</value>
	  <value>jpg</value>
	  <value>jp2000</value>
	  <value>jp2</value>
	  <value>jpf</value>
	  <value>jpp</value>
	  <value>djvu</value>
	</list>
      </property>
    </bean>
    
    <!-- imagemagick (identify) -->
    <import resource="imagemagickMetadataExtractor.xml"/>

    <!-- djvudump -->
    <bean id="djvudumpMetadataTransformer" class="cz.nkp.differ.compare.metadata.external.RegexpTransformer">
      <property name="mapOfRegexp">
    	    <map>
    	      <entry key="Type of format"   value="FORM:([^\[]+)"/>
    	      <entry key="Software type"    value="INFO \[[0-9]+\][^x]*,[\ \t]*([^,]+)"/>
    	      <entry key="Image width"      value="INFO \[[0-9]+\].*([0-9]+)x"/>
    	      <entry key="Image height"     value="INFO \[[0-9]+\].*[0-9]+x([0-9]+)"/>
    	      <entry key="Resolution"       value="INFO \[[0-9=+\].*v[0-9]+,[\ \t]*([0-9]+[\ \t]*dpi)"/>
    	    </map>
    	</property>
    	<property name="listOfRegexp">
    	  <list>
    	    <value>([^:]+):([^:]+)</value>
    	  </list>
    	</property>
    </bean>

    <bean id="djvudumpMetadataExtractor" class="cz.nkp.differ.compare.metadata.external.ExternalMetadataExtractor">
    	<property name="source" value="djvudump"/>
    	<property name="transformer" ref="djvudumpMetadataTransformer"/>
    	<property name="programArguments">
    	    <list>
    		<value>${djvudump.binary}</value>
    		<value>{file}</value>
    	    </list>
    	</property>
    	<property name="units" ref="units"/>
      <property name="supportedFileExtensions">
	<list>
	  <value>djvu</value>
	</list>
      </property>

    </bean>

    <!-- exiv2 -->
    <bean id="exiv2MetadataTransformer" class="cz.nkp.differ.compare.metadata.external.RegexpTransformer">
      <property name="mapOfRegexp">
	<map>
	  <entry key="Image width"            value="Image size      : ([0-9]+) x [0-9]+"/>
	  <entry key="Image height"           value="Image size      : [0-9]+ x ([0-9]+)"/>
	  <entry key="Resolution horizontal"     value="Exif Resolution : ([0-9]+) x [0-9]+"/>
	  <entry key="Resolution vertical"       value="Exif Resolution : [0-9]+ x ([0-9]+)"/>
	  <entry key="MIME type"                       value="MIME type       : (.*)"/>
	  <entry key="File name"                       value="File name       : (.*)"/>
	  <entry key="File path"                       value="File name       : (.*)"/>
	  <entry key="File size"                       value="File size       : ([0-9]+)"/>
	</map>
      </property>
      <property name="listOfRegexp">
	<list>
	  <value>([^:]+):([^:]+)</value>
	</list>
      </property>
    </bean>
    <bean id="exiv2MetadataExtractor" class="cz.nkp.differ.compare.metadata.external.ExternalMetadataExtractor">
      <property name="source" value="exiv2"/>
      <property name="transformer" ref="exiv2MetadataTransformer"/>
      <property name="programArguments">
	<list>
	  <value>${exiv2.binary}</value>
	  <value>print</value>
	  <value>{file}</value>
	</list>
      </property>
      <property name="units" ref="units"/>
      <property name="supportedFileExtensions">
	<list>
	  <value>tiff</value>
	  <value>tif</value>
	  <value>jpeg</value>
	  <value>jpg</value>
	  <value>jp2000</value>
	  <value>jp2</value>
	  <value>jpf</value>
	  <value>jpp</value>
	  <value>djvu</value>
	</list>
      </property>

    </bean>


    <!-- daitss -->
    <import resource="daitssMetadataExtractor.xml"/>

    <!-- fits -->
    <import resource="fitsMetadataExtractor.xml"/>

    <!-- jpylyzer -->
    <bean id="jpylyzerMetadataTransformer" class="cz.nkp.differ.compare.metadata.external.XSLTTransformer">
    	<property name="stylesheet" value="${jpylyzer.xsl}"/>
    </bean>
    <bean id="jpylyzerMetadataExtractor" class="cz.nkp.differ.compare.metadata.external.ExternalMetadataExtractor">
      <property name="source" value="jpylyzer"/>
      <property name="transformer" ref="jpylyzerMetadataTransformer"/>
      <property name="programArguments">
	<list>
	  <value>${jpylyzer.binary}</value>
	  <value>--verbose</value>
	  <value>{file}</value>
	</list>
      </property>
      <property name="units" ref="units"/>
      <property name="supportedFileExtensions">
	<list>
	  <value>jp2000</value>
	  <value>jp2</value>
	  <value>jpf</value>
	  <value>jpp</value>
	</list>
      </property>

    </bean>
    
    <!-- Jhove -->
    <bean id="jhoveMetadataTransformer" class="cz.nkp.differ.compare.metadata.external.XSLTTransformer">
      <property name="stylesheet" value="${jhove.xsl}"/>
    </bean>

    <bean id="jhoveMetadataExtractor" class="cz.nkp.differ.compare.metadata.external.ExternalMetadataExtractor">
      <property name="source" value="jhove"/>
      <property name="transformer" ref="jhoveMetadataTransformer"/>
      <property name="programArguments">
	<list>
	  <value>${jhove.binary}</value>
	  <value>-h</value>
	  <value>xml</value>
	  <value>{file}</value>
	</list>
      </property>
      <property name="units" ref="units"/>
      <property name="supportedFileExtensions">
	<list>
	  <value>tiff</value>
	  <value>tif</value>
	  <value>jpeg</value>
	  <value>jpg</value>
	  <value>jp2000</value>
	  <value>jp2</value>
	  <value>jpf</value>
	  <value>jpp</value>
	  <value>djvu</value>
	  <value>png</value>
	</list>
      </property>
    </bean>

    <bean id="metadataExtractors" class="cz.nkp.differ.compare.metadata.MetadataExtractors">
	<property name="extractors">
	    <list>
	      <ref bean="fitsMetadataExtractor"/>
	      <ref bean="exiftoolMetadataExtractor"/>
	      <ref bean="djvudumpMetadataExtractor"/>
	      <ref bean="jhoveMetadataExtractor"/>
	      <ref bean="exiv2MetadataExtractor"/>
	      <ref bean="jpylyzerMetadataExtractor"/>
	      <ref bean="daitssHTTPMetadataExtractor"/>
	      <ref bean="imagemagickMetadataExtractor"/>
	    </list>
	</property>
    </bean>

    <context:component-scan base-package="cz.nkp.differ"/>

    <bean id="jaxb2Marshaller" class="org.springframework.oxm.jaxb.Jaxb2Marshaller">
	<property name="classesToBeBound">
	    <list>
		<value>cz.nkp.differ.compare.io.SerializableImageProcessorResult</value>
                <value>cz.nkp.differ.compare.io.SerializableImageProcessorResults</value>
	    </list>
	</property>
	<property name="marshallerProperties">
	    <map>
		<entry>
		    <key>
			<util:constant static-field="javax.xml.bind.Marshaller.JAXB_FORMATTED_OUTPUT" />
		    </key>
		    <value type="boolean">true</value>
		</entry>
	    </map>
	</property>
    </bean>

</beans>
